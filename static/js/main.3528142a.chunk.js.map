{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","letter","document","addEventListener","event","setState","key","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,OAAQ,IAFZ,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,OAAQG,EAAME,WAPpC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,OAAQG,EAAME,WAbpC,oBAiBE,WACE,OACE,qBAAKE,UAAU,MAAf,SACGC,KAAKT,MAAMC,OACR,mBAAGO,UAAU,eAAb,4CAAyDC,KAAKT,MAAMC,OAApE,OACA,mBAAGO,UAAU,eAAb,2CAtBZ,GAAyBE,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.3528142a.chunk.js","sourcesContent":["import React from 'react';\n\ntype MyProps = {};\n\ntype MyState = {\n  letter: string;\n};\n\nexport class App extends React.Component<MyProps, MyState> {\n  state = {\n    letter: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ letter: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ letter: event.key });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.letter\n          ? <p className=\"App__message\">{`The last pressed key is [${this.state.letter}]`}</p>\n          : <p className=\"App__message\">Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}